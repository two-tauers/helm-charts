
name: Lint and Test

on: 
  pull_request:
    paths:
      - 'charts/**'

env:
  CT_CONFIGFILE: .github/ct.yaml

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.9.1

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.1.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config "${CT_CONFIGFILE}")
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi
      - name: Run chart-testing (lint)
        run: ct lint --config "${CT_CONFIGFILE}" --check-version-increment=true

      - name: Create kind cluster
        uses: helm/kind-action@v1.2.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Run chart-testing (install)
        run: |
          changed=$(ct list-changed --config "${CT_CONFIGFILE}")
          if [[ "$changed" == "charts/enterprise-metrics" ]]; then
            # Do not run `ct install` for enterprise-metrics
            exit 0
          fi
          ct install --config "${CT_CONFIGFILE}"

  kubeval:
    runs-on: ubuntu-latest
    needs:
      - lint
    strategy:
      matrix:
        k8s:
          - v1.22.0
          - v1.23.1
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Run kubeval
        env:
          KUBERNETES_VERSION: ${{ matrix.k8s }}
        run: |-
          set -euo pipefail

          CHART_DIRS="$(git diff --find-renames --name-only "$(git rev-parse --abbrev-ref HEAD)" remotes/origin/master -- charts | grep '[cC]hart.yaml' | sed -e 's#/[Cc]hart.yaml##g')"
          KUBEVAL_VERSION="0.14.0"
          SCHEMA_LOCATION="https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/"

          # install kubeval
          curl --silent --show-error --fail --location --output /tmp/kubeval.tar.gz https://github.com/instrumenta/kubeval/releases/download/"${KUBEVAL_VERSION}"/kubeval-linux-amd64.tar.gz
          tar -xf /tmp/kubeval.tar.gz kubeval

          # validate charts
          for CHART_DIR in ${CHART_DIRS}; do
            helm template "${CHART_DIR}" | ./kubeval --strict --ignore-missing-schemas --kubernetes-version "${KUBERNETES_VERSION#v}" --schema-location "${SCHEMA_LOCATION}"
          done